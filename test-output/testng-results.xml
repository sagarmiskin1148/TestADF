<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="27" passed="24" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-19T01:20:34 IST" name="Suite" finished-at="2025-06-19T01:28:15 IST" duration-ms="461080">
    <groups>
    </groups>
    <test started-at="2025-06-19T01:20:34 IST" name="Test" finished-at="2025-06-19T01:28:15 IST" duration-ms="461080">
      <class name="tests.LoginTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:34 IST" name="beforeSuite" finished-at="2025-06-19T01:20:34 IST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:34 IST" name="beforeMethod" finished-at="2025-06-19T01:20:45 IST" duration-ms="10651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyUsernameLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUsernameLabelText()[pri:1, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:45 IST" name="verifyUsernameLabelText" description="Verify username label text" finished-at="2025-06-19T01:20:45 IST" duration-ms="86" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Username label mismatch expected [E-Mail Address] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Username label mismatch expected [E-Mail Address] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at tests.LoginTests.verifyUsernameLabelText(LoginTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsernameLabelText -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:45 IST" name="afterMethod" finished-at="2025-06-19T01:20:46 IST" duration-ms="1127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsernameLabelText status=FAILURE method=LoginTests.verifyUsernameLabelText()[pri:1, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:46 IST" name="beforeMethod" finished-at="2025-06-19T01:20:55 IST" duration-ms="8384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyPasswordLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPasswordLabelText()[pri:2, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:55 IST" name="verifyPasswordLabelText" description="Verify password label text" finished-at="2025-06-19T01:20:55 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordLabelText -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:55 IST" name="afterMethod" finished-at="2025-06-19T01:20:55 IST" duration-ms="484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordLabelText status=SUCCESS method=LoginTests.verifyPasswordLabelText()[pri:2, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:20:55 IST" name="beforeMethod" finished-at="2025-06-19T01:21:04 IST" duration-ms="8638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyEmailPlaceholder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailPlaceholder()[pri:3, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:04 IST" name="verifyEmailPlaceholder" description="Verify email placeholder" finished-at="2025-06-19T01:21:04 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailPlaceholder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:04 IST" name="afterMethod" finished-at="2025-06-19T01:21:04 IST" duration-ms="565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailPlaceholder status=SUCCESS method=LoginTests.verifyEmailPlaceholder()[pri:3, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:04 IST" name="beforeMethod" finished-at="2025-06-19T01:21:14 IST" duration-ms="9332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyPasswordPlaceholder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPasswordPlaceholder()[pri:4, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:14 IST" name="verifyPasswordPlaceholder" description="Verify password placeholder" finished-at="2025-06-19T01:21:14 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordPlaceholder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:14 IST" name="afterMethod" finished-at="2025-06-19T01:21:14 IST" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordPlaceholder status=SUCCESS method=LoginTests.verifyPasswordPlaceholder()[pri:4, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:14 IST" name="beforeMethod" finished-at="2025-06-19T01:21:22 IST" duration-ms="7974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyEyeIconVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEyeIconVisibility()[pri:5, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:22 IST" name="verifyEyeIconVisibility" description="Verify eye icon visibility" finished-at="2025-06-19T01:21:22 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEyeIconVisibility -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:22 IST" name="afterMethod" finished-at="2025-06-19T01:21:23 IST" duration-ms="561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEyeIconVisibility status=SUCCESS method=LoginTests.verifyEyeIconVisibility()[pri:5, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:23 IST" name="beforeMethod" finished-at="2025-06-19T01:21:31 IST" duration-ms="7782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyForgotPasswordLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyForgotPasswordLink()[pri:6, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:31 IST" name="verifyForgotPasswordLink" description="Verify Forgot Password link visibility and clickability" finished-at="2025-06-19T01:21:31 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:31 IST" name="afterMethod" finished-at="2025-06-19T01:21:31 IST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgotPasswordLink status=SUCCESS method=LoginTests.verifyForgotPasswordLink()[pri:6, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:31 IST" name="beforeMethod" finished-at="2025-06-19T01:21:39 IST" duration-ms="7411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyLoginButtonProperties()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginButtonProperties()[pri:7, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:39 IST" name="verifyLoginButtonProperties" description="Verify login button visibility, text, and enablement" finished-at="2025-06-19T01:21:39 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginButtonProperties -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:39 IST" name="afterMethod" finished-at="2025-06-19T01:21:39 IST" duration-ms="522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginButtonProperties status=SUCCESS method=LoginTests.verifyLoginButtonProperties()[pri:7, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:39 IST" name="beforeMethod" finished-at="2025-06-19T01:21:43 IST" duration-ms="3169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyLoginButtonColor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginButtonColor()[pri:8, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:43 IST" name="verifyLoginButtonColor" description="Verify login button color" finished-at="2025-06-19T01:21:48 IST" duration-ms="5851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginButtonColor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:48 IST" name="afterMethod" finished-at="2025-06-19T01:21:49 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginButtonColor status=SUCCESS method=LoginTests.verifyLoginButtonColor()[pri:8, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:49 IST" name="beforeMethod" finished-at="2025-06-19T01:21:57 IST" duration-ms="7687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyLoginButtonSize()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginButtonSize()[pri:9, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:57 IST" name="verifyLoginButtonSize" description="Verify login button size" finished-at="2025-06-19T01:21:57 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginButtonSize -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:57 IST" name="afterMethod" finished-at="2025-06-19T01:21:57 IST" duration-ms="405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginButtonSize status=SUCCESS method=LoginTests.verifyLoginButtonSize()[pri:9, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:21:57 IST" name="beforeMethod" finished-at="2025-06-19T01:22:05 IST" duration-ms="7679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyEmailInputBelowLabel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailInputBelowLabel()[pri:10, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:05 IST" name="verifyEmailInputBelowLabel" description="Verify email input is below its label" finished-at="2025-06-19T01:22:05 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailInputBelowLabel -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:05 IST" name="afterMethod" finished-at="2025-06-19T01:22:05 IST" duration-ms="445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailInputBelowLabel status=SUCCESS method=LoginTests.verifyEmailInputBelowLabel()[pri:10, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:05 IST" name="beforeMethod" finished-at="2025-06-19T01:22:13 IST" duration-ms="7981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyPasswordInputBelowLabel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPasswordInputBelowLabel()[pri:11, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:13 IST" name="verifyPasswordInputBelowLabel" description="Verify password input is below its label" finished-at="2025-06-19T01:22:13 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordInputBelowLabel -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:13 IST" name="afterMethod" finished-at="2025-06-19T01:22:14 IST" duration-ms="543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordInputBelowLabel status=SUCCESS method=LoginTests.verifyPasswordInputBelowLabel()[pri:11, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:14 IST" name="beforeMethod" finished-at="2025-06-19T01:22:29 IST" duration-ms="15280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyEmailLabelAboveInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmailLabelAboveInput()[pri:12, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:29 IST" name="verifyEmailLabelAboveInput" description="Verify email label is above email input" finished-at="2025-06-19T01:22:29 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailLabelAboveInput -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:29 IST" name="afterMethod" finished-at="2025-06-19T01:22:30 IST" duration-ms="470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailLabelAboveInput status=SUCCESS method=LoginTests.verifyEmailLabelAboveInput()[pri:12, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:30 IST" name="beforeMethod" finished-at="2025-06-19T01:22:38 IST" duration-ms="8679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyPasswordLabelAboveInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPasswordLabelAboveInput()[pri:13, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:38 IST" name="verifyPasswordLabelAboveInput" description="Verify password label is above password input" finished-at="2025-06-19T01:22:39 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordLabelAboveInput -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:39 IST" name="afterMethod" finished-at="2025-06-19T01:22:39 IST" duration-ms="647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordLabelAboveInput status=SUCCESS method=LoginTests.verifyPasswordLabelAboveInput()[pri:13, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:39 IST" name="beforeMethod" finished-at="2025-06-19T01:22:42 IST" duration-ms="2995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyPasswordLabelBelowEmailError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPasswordLabelBelowEmailError()[pri:14, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:42 IST" name="verifyPasswordLabelBelowEmailError" description="Verify password label is below email error" finished-at="2025-06-19T01:22:49 IST" duration-ms="6641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordLabelBelowEmailError -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:49 IST" name="afterMethod" finished-at="2025-06-19T01:22:49 IST" duration-ms="453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordLabelBelowEmailError status=SUCCESS method=LoginTests.verifyPasswordLabelBelowEmailError()[pri:14, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:49 IST" name="beforeMethod" finished-at="2025-06-19T01:22:57 IST" duration-ms="7904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyForgotPasswordLinkBelowError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyForgotPasswordLinkBelowError()[pri:15, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:57 IST" name="verifyForgotPasswordLinkBelowError" description="Verify forgot password link is below password error" finished-at="2025-06-19T01:22:57 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordLinkBelowError -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:57 IST" name="afterMethod" finished-at="2025-06-19T01:22:58 IST" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgotPasswordLinkBelowError status=SUCCESS method=LoginTests.verifyForgotPasswordLinkBelowError()[pri:15, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:22:58 IST" name="beforeMethod" finished-at="2025-06-19T01:23:07 IST" duration-ms="8783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.verifyLoginButtonBelowForgotPasswordLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginButtonBelowForgotPasswordLink()[pri:16, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:07 IST" name="verifyLoginButtonBelowForgotPasswordLink" description="Verify login button is below forgot password link" finished-at="2025-06-19T01:23:07 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginButtonBelowForgotPasswordLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:07 IST" name="afterMethod" finished-at="2025-06-19T01:23:07 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginButtonBelowForgotPasswordLink status=SUCCESS method=LoginTests.verifyLoginButtonBelowForgotPasswordLink()[pri:16, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:07 IST" name="beforeMethod" finished-at="2025-06-19T01:23:16 IST" duration-ms="8706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.loginWithBlankUsernameAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithBlankUsernameAndPassword()[pri:17, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:16 IST" name="loginWithBlankUsernameAndPassword" description="Verify login with blank username and password" finished-at="2025-06-19T01:23:17 IST" duration-ms="820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithBlankUsernameAndPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:17 IST" name="afterMethod" finished-at="2025-06-19T01:23:17 IST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithBlankUsernameAndPassword status=SUCCESS method=LoginTests.loginWithBlankUsernameAndPassword()[pri:17, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:17 IST" name="beforeMethod" finished-at="2025-06-19T01:23:35 IST" duration-ms="17713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.loginWithBlankEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithBlankEmail()[pri:18, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:35 IST" name="loginWithBlankEmail" description="Verify login with blank email and filled password" finished-at="2025-06-19T01:23:36 IST" duration-ms="810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithBlankEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:36 IST" name="afterMethod" finished-at="2025-06-19T01:23:36 IST" duration-ms="646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithBlankEmail status=SUCCESS method=LoginTests.loginWithBlankEmail()[pri:18, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:36 IST" name="beforeMethod" finished-at="2025-06-19T01:23:52 IST" duration-ms="15634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.loginWithBlankPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithBlankPassword()[pri:19, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:52 IST" name="loginWithBlankPassword" description="Verify login with filled email and blank password" finished-at="2025-06-19T01:23:53 IST" duration-ms="768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithBlankPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:53 IST" name="afterMethod" finished-at="2025-06-19T01:23:53 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithBlankPassword status=SUCCESS method=LoginTests.loginWithBlankPassword()[pri:19, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:23:53 IST" name="beforeMethod" finished-at="2025-06-19T01:24:01 IST" duration-ms="8151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.loginWithInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithInvalidPassword()[pri:20, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:24:01 IST" name="loginWithInvalidPassword" description="Verify login fails with valid username and invalid password" finished-at="2025-06-19T01:24:03 IST" duration-ms="1845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:24:03 IST" name="afterMethod" finished-at="2025-06-19T01:24:04 IST" duration-ms="581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidPassword status=SUCCESS method=LoginTests.loginWithInvalidPassword()[pri:20, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:24:04 IST" name="beforeMethod" finished-at="2025-06-19T01:24:13 IST" duration-ms="9193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTests.loginWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithValidCredentials()[pri:21, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:24:13 IST" name="loginWithValidCredentials" description="Verify login with valid credentials" finished-at="2025-06-19T01:24:26 IST" duration-ms="13089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:24:26 IST" name="afterMethod" finished-at="2025-06-19T01:24:27 IST" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=SUCCESS method=LoginTests.loginWithValidCredentials()[pri:21, instance:tests.LoginTests@dd05255] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.LoginTests@dd05255]" started-at="2025-06-19T01:28:15 IST" name="afterSuite" finished-at="2025-06-19T01:28:16 IST" duration-ms="865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.LoginTests -->
      <class name="tests.DashboardTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:24:27 IST" name="beforeMethod" finished-at="2025-06-19T01:24:30 IST" duration-ms="3228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.DashboardTest.verifyTopNavigationMenusVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTopNavigationMenusVisibility()[pri:1, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:24:30 IST" name="verifyTopNavigationMenusVisibility" description="Verify all top navigation menu items are visible" finished-at="2025-06-19T01:24:59 IST" duration-ms="28800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTopNavigationMenusVisibility -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:24:59 IST" name="afterMethod" finished-at="2025-06-19T01:24:59 IST" duration-ms="581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTopNavigationMenusVisibility status=SUCCESS method=DashboardTest.verifyTopNavigationMenusVisibility()[pri:1, instance:tests.DashboardTest@139982de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:24:59 IST" name="beforeMethod" finished-at="2025-06-19T01:25:08 IST" duration-ms="9143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.DashboardTest.verifyTopNavigationMenusClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTopNavigationMenusClickable()[pri:2, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:25:08 IST" name="verifyTopNavigationMenusClickable" description="Verify all top navigation menu items are clickable" finished-at="2025-06-19T01:25:35 IST" duration-ms="26144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTopNavigationMenusClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:25:35 IST" name="afterMethod" finished-at="2025-06-19T01:25:35 IST" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTopNavigationMenusClickable status=SUCCESS method=DashboardTest.verifyTopNavigationMenusClickable()[pri:2, instance:tests.DashboardTest@139982de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:25:35 IST" name="beforeMethod" finished-at="2025-06-19T01:25:51 IST" duration-ms="15333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.DashboardTest.verifyRecentlyAddedSectionVisible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRecentlyAddedSectionVisible()[pri:3, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:25:51 IST" name="verifyRecentlyAddedSectionVisible" description="Verify Recently Added section visibility" finished-at="2025-06-19T01:26:47 IST" duration-ms="56199" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA['Recently Added' section should be visible. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 'Recently Added' section should be visible. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.DashboardTest.verifyRecentlyAddedSectionVisible(DashboardTest.java:73)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRecentlyAddedSectionVisible -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:26:47 IST" name="afterMethod" finished-at="2025-06-19T01:26:48 IST" duration-ms="1428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRecentlyAddedSectionVisible status=FAILURE method=DashboardTest.verifyRecentlyAddedSectionVisible()[pri:3, instance:tests.DashboardTest@139982de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:26:48 IST" name="beforeMethod" finished-at="2025-06-19T01:26:58 IST" duration-ms="9357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.DashboardTest.verifyRecentlyAddedHeading()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRecentlyAddedHeading()[pri:4, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:26:58 IST" name="verifyRecentlyAddedHeading" description="Verify Recently Added section heading" finished-at="2025-06-19T01:27:25 IST" duration-ms="26892" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Heading should match exactly. expected [Recently Added] but found [[Missing]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Heading should match exactly. expected [Recently Added] but found [[Missing]]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at tests.DashboardTest.verifyRecentlyAddedHeading(DashboardTest.java:85)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRecentlyAddedHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:27:25 IST" name="afterMethod" finished-at="2025-06-19T01:27:26 IST" duration-ms="1075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRecentlyAddedHeading status=FAILURE method=DashboardTest.verifyRecentlyAddedHeading()[pri:4, instance:tests.DashboardTest@139982de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:27:26 IST" name="beforeMethod" finished-at="2025-06-19T01:27:34 IST" duration-ms="8564" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.DashboardTest.verifyRecentlyAddedLectureCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRecentlyAddedLectureCount()[pri:5, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:27:34 IST" name="verifyRecentlyAddedLectureCount" description="Verify Recently Added section contains at least one lecture" finished-at="2025-06-19T01:27:50 IST" duration-ms="15890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRecentlyAddedLectureCount -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:27:50 IST" name="afterMethod" finished-at="2025-06-19T01:27:51 IST" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRecentlyAddedLectureCount status=SUCCESS method=DashboardTest.verifyRecentlyAddedLectureCount()[pri:5, instance:tests.DashboardTest@139982de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:27:51 IST" name="beforeMethod" finished-at="2025-06-19T01:27:54 IST" duration-ms="3006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.DashboardTest.verifyEachRecentlyAddedLectureDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEachRecentlyAddedLectureDetails()[pri:6, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:27:54 IST" name="verifyEachRecentlyAddedLectureDetails" description="Verify details of each Recently Added lecture card" finished-at="2025-06-19T01:28:15 IST" duration-ms="20720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEachRecentlyAddedLectureDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboardTest@139982de]" started-at="2025-06-19T01:28:15 IST" name="afterMethod" finished-at="2025-06-19T01:28:15 IST" duration-ms="706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEachRecentlyAddedLectureDetails status=SUCCESS method=DashboardTest.verifyEachRecentlyAddedLectureDetails()[pri:6, instance:tests.DashboardTest@139982de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.DashboardTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
